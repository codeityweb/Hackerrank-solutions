The Problem is as Follows:

You will be given an array of integers and a target value. Determine the number of pairs of array elements that have a difference equal to a target value.

For example, given an array of [1, 2, 3, 4] and a target value of 1, we have three values meeting the condition: 2-1=1, 3-2=1 , 4-3=1



Pairs Hackerrank Solution Java:

-

static int pairs(int k, int[] arr) {

int count=0;

for(int i=0;i<arr.length-1;i++)
{
  for(int j=i+1;j<arr.length;j++){
  if(Math.abs(arr[i]-arr[j])==k)count++;
}
}

return count;
}

-

Method 2:

Pairs Hackerrank Solution Java:



-

static int pairs(int k, int[] arr) {

int count=0;
Arrays.sort(arr);
int i=0;
int j=1;
while(j<arr.length)
{


if(arr[j]-arr[i]>k)i++;
else if(arr[j]-arr[i]<k)j++;
else{count++;
j++;}


}
return count;
}


-

Method 2 Python



Pairs Hackerrank Solution Python:


-

def pairs(k, arr):
    count=0
    arr.sort()

    i=0
    j=1

    while j<len(arr):
        if arr[j]-arr[i]>k:
            i+=1
        elif arr[j]-arr[i]<k:
            j+=1
        else:
            count+=1
            j+=1
    return count

-



